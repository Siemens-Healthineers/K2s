# SPDX-FileCopyrightText: Â© 2024 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: albums-win1
spec:
  selector:
    matchLabels:
      app: albums-win1
  replicas: 1
  template:
    metadata:
      labels:
        app: albums-win1
    spec:
      containers:
        - name: albums-win1
          image: shsk2s.azurecr.io/example.albums-golang-win:v1.0.0 #windows_image
          ports:
            - containerPort: 80
          env:
            - name: PORT
              value: '80'
            - name: RESOURCE
              value: 'albums-win1'
          # Add readiness probe to ensure service traffic only goes to ready pods
          readinessProbe:
            httpGet:
              path: /albums-win1
              port: 80
            initialDelaySeconds: 30 # Windows containers need more time to start
            periodSeconds: 10 # Check every 10 seconds
            timeoutSeconds: 5 # Allow 5 seconds for response
            failureThreshold: 6 # Allow 6 failures before marking unready (1 minute)
            successThreshold: 1 # Only 1 success needed to mark ready
          # Add liveness probe to restart unhealthy containers
          livenessProbe:
            httpGet:
              path: /albums-win1
              port: 80
            initialDelaySeconds: 60 # Give more time before first liveness check
            periodSeconds: 30 # Check every 30 seconds
            timeoutSeconds: 10 # Allow 10 seconds for response
            failureThreshold: 3 # Allow 3 failures before restart (1.5 minutes)
          # Add resource limits to ensure consistent performance
          resources:
            requests:
              memory: '256Mi'
              cpu: '250m'
            limits:
              memory: '512Mi'
              cpu: '500m'
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: 'OS'
          operator: 'Equal'
          value: 'Windows'
          effect: 'NoSchedule'
---
apiVersion: v1
kind: Service
metadata:
  name: albums-win1
spec:
  selector:
    app: albums-win1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.21.1.200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: albums-win2
spec:
  selector:
    matchLabels:
      app: albums-win2
  replicas: 1
  template:
    metadata:
      labels:
        app: albums-win2
    spec:
      containers:
        - name: albums-win2
          image: shsk2s.azurecr.io/example.albums-golang-win:v1.0.0 #windows_image
          ports:
            - containerPort: 80
          env:
            - name: PORT
              value: '80'
            - name: RESOURCE
              value: 'albums-win2'
          # Add readiness probe to ensure service traffic only goes to ready pods
          readinessProbe:
            httpGet:
              path: /albums-win2
              port: 80
            initialDelaySeconds: 30 # Windows containers need more time to start
            periodSeconds: 10 # Check every 10 seconds
            timeoutSeconds: 5 # Allow 5 seconds for response
            failureThreshold: 6 # Allow 6 failures before marking unready (1 minute)
            successThreshold: 1 # Only 1 success needed to mark ready
          # Add liveness probe to restart unhealthy containers
          livenessProbe:
            httpGet:
              path: /albums-win2
              port: 80
            initialDelaySeconds: 60 # Give more time before first liveness check
            periodSeconds: 30 # Check every 30 seconds
            timeoutSeconds: 10 # Allow 10 seconds for response
            failureThreshold: 3 # Allow 3 failures before restart (1.5 minutes)
          # Add resource limits to ensure consistent performance
          resources:
            requests:
              memory: '256Mi'
              cpu: '250m'
            limits:
              memory: '512Mi'
              cpu: '500m'
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: 'OS'
          operator: 'Equal'
          value: 'Windows'
          effect: 'NoSchedule'
---
apiVersion: v1
kind: Service
metadata:
  name: albums-win2
spec:
  selector:
    app: albums-win2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  clusterIP: 172.21.1.201
---

