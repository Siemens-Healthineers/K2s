# SPDX-FileCopyrightText: Â© 2025 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: albums-win1
spec:
  selector:
    matchLabels:
      app: albums-win1
  replicas: 1
  template:
    metadata:
      labels:
        app: albums-win1
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: albums-win1
          image: shsk2s.azurecr.io/example.albums-golang-win:v1.5.0 #windows_image
          ports:
            - containerPort: 8081
          env:
            - name: PORT
              value: '8081'
            - name: RESOURCE
              value: 'albums-win1'
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: 'OS'
          operator: 'Equal'
          value: 'Windows'
          effect: 'NoSchedule'
---
apiVersion: v1
kind: Service
metadata:
  name: albums-win1
spec:
  selector:
    app: albums-win1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  clusterIP: 172.21.1.210
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: albums-win2
spec:
  selector:
    matchLabels:
      app: albums-win2
  replicas: 1
  template:
    metadata:
      labels:
        app: albums-win2
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: albums-win2
          image: shsk2s.azurecr.io/example.albums-golang-win:v1.5.0 #windows_image
          ports:
            - containerPort: 8082
          env:
            - name: PORT
              value: '8082'
            - name: RESOURCE
              value: 'albums-win2'
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: 'OS'
          operator: 'Equal'
          value: 'Windows'
          effect: 'NoSchedule'
---
apiVersion: v1
kind: Service
metadata:
  name: albums-win2
spec:
  selector:
    app: albums-win2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8082
  clusterIP: 172.21.1.211
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: albums-win1
spec:
  rules:
    - host: k2s.cluster.local
      http:
        paths:
          - path: /albums-win1
            pathType: Prefix
            backend:
              service:
                name: albums-win1
                port:
                  number: 80
  ingressClassName: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: albums-win2
spec:
  rules:
    - host: k2s.cluster.local
      http:
        paths:
          - path: /albums-win2
            pathType: Prefix
            backend:
              service:
                name: albums-win2
                port:
                  number: 80
  ingressClassName: nginx
