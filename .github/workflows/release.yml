# SPDX-FileCopyrightText: Â© 2024 Siemens Healthineers AG
# SPDX-License-Identifier: MIT

name: Release a version

on:
  workflow_dispatch:
  push:
    tags:
      - 'v1.*'

jobs:
  build_release:
    name: build_release
    runs-on: windows-latest
    steps:
        # checkout the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

        # get the version from the k2s cli
      - name: version
        run: echo "version=$((.\k2s.exe version).Split()[1].Substring(0, 6))" >> $env:GITHUB_OUTPUT
        id: version
        shell: pwsh

        # get previous tag
      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

        # create the changelog text
        # - name: Create changelog text
        # id: changelog
        # uses: loopwerk/tag-changelog@v1
        # with:
        #  token: ${{ github.token }}
        #  exclude_types: ci, chore   
      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.previousTag }}
          writeToFile: false

        # create the release for the version
      - name: release
        uses: actions/create-release@latest
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path:  ${{ steps.changelog.outputs.changes }} 
        env:
          GITHUB_TOKEN: ${{ github.token }}

        # create zip file of the entire project except certain folders
      - name: Create zip file
        run: |
          $exclude = @('.github', '.vscode', '.gitignore')
          Compress-Archive -Path . -DestinationPath K2s-${{ steps.version.outputs.version }}.zip -CompressionLevel Optimal -ExcludePath $exclude

        # upload the zip file to the release
      - name: upload zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./K2s-${{ steps.version.outputs.version }}.zip
            asset_name: K2s-${{ steps.version.outputs.version }}.zip
            asset_content_type: application/zip
