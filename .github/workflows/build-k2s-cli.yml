# SPDX-FileCopyrightText: Â© 2024 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

# Build k2s Pipeline
# Responsible for trigerring build for k2s executable when the source is changed.

name: "Build - k2s CLI"

on:
  workflow_dispatch:
#  push:
#    branches:
#      - "main"
#    paths:
#      - 'k2s/**'
#      - '!k2s/test/**'

env:
  GOVERSION: "1.24.2"

jobs:
  build-k2s-cli:
    name: Build k2s CLI
    timeout-minutes: 30
    continue-on-error: false
    runs-on: windows-latest
    env:
      CI_COMMIT_MESSAGE: "ci: auto-commit k2s cli"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4      
      
    # - name: Configure SSH known_hosts
    # Use PowerShell to run native Windows commands
    #  shell: pwsh
    #  run: |
        # Use cmd.exe style commands for filesystem operations
        # This creates the .ssh directory
    #    mkdir ~/.ssh
        
        # This command appends the host key
    #   ssh-keyscan github.com >> ~/.ssh/known_hosts

        # Now, use icacls with PowerShell's syntax. 
        # Note the different way of passing arguments.
    #    icacls "$env:HOME\.ssh\known_hosts" /grant "Users:F"

      # use an older version since under windows it caues an key verification error
    # - uses: webfactory/ssh-agent@v0.9.1
    #  with:
    #      ssh-private-key: ${{ secrets.AUTOCOMMITKEY }}

    - name: Set up Golang
      uses: actions/setup-go@v5
      with:
        go-version: ${{env.GOVERSION}}
        cache-dependency-path: "**/*.sum"

    - name: Configure repo
      run: |
        git config --local user.email github-actions@github.com
        git config --local user.name github-actions
        git remote set-url origin https://x-access-token:${{ secrets.AUTOCOMMIT_TOKEN }}@github.com/${{ github.repository }}
        git remote -v

    - name: Show all diff
      run: |
        git diff --exit-code -- .

    - name: Current working directory
      run: |
        ls

    - name: Build k2s executable
      run: |
        .\smallsetup\common\BuildGoExe.ps1
        ls

    # - name: Run ci Acceptance Tests
    #  shell: powershell
    #  run: |
    #    $ErrorActionPreference = "Continue"
    #    .\test\execute_all_tests.ps1 -Tags ci -ExcludeTags unit, integration -V -ThrowOnFailure

    - name: Create temporary branch for commit
      id: create_branch
      run: |
        $branchName = "temp-auto-commit-" + (Get-Date -Format "yyyyMMddHHmmss")
        echo "branchName=$branchName" | Out-File -FilePath env.txt -Encoding ascii
        Write-Host "Created branch $branchName"
        git checkout -b $branchName
        echo ::set-output name=branch::$branchName
      shell: powershell

    - name: Configure git to auto set upstream on push
      run: git config --global push.autoSetupRemote true
        
    - name: Commit changes
      shell: powershell
      run: |
        git add k2s.exe
        git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
        git push --set-upstream origin ${{ steps.create_branch.outputs.branch }}

    - name: Create Pull Request
      id: pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.AUTOCOMMIT_TOKEN }}
        title: "${{ env.CI_COMMIT_MESSAGE }}"
        commit-message: "${{ env.CI_COMMIT_MESSAGE }}"
        base: main
        head: ${{ steps.create_branch.outputs.branch }}
        draft: false
        body: "Automatic PR created by workflow"

    - name: Approve Pull Request
      uses: hmarr/auto-approve-action@v2.1.0
      with:
        github-token: ${{ secrets.AUTOCOMMIT_TOKEN }}
      if: steps.pr.outputs.pull-request-number != ''

    - name: Merge Pull Request
      uses: pascalgn/automerge-action@v0.15.4
      with:
        github_token: ${{ secrets.AUTOCOMMIT_TOKEN }}
        merge_method: merge
        pull_request_number: ${{ steps.pr.outputs.pull-request-number }}
        delete_branch: true
      if: steps.pr.outputs.pull-request-number != ''

    # - name: Commit k2s cli
    #  run: |
    #    git add k2s.exe
    #    git commit -m  "${{ env.CI_COMMIT_MESSAGE }}"
    #    git push
