# SPDX-FileCopyrightText: Â© 2025 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: linkerd
  namespace: linkerd-viz
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084
    nginx.ingress.kubernetes.io/auth-signin: https://k2s.cluster.local/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://k2s.cluster.local/oauth2/auth
    # viz does not support base url, therefore substituting by nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request_set $user  $upstream_http_x_auth_request_user;
      auth_request_set $email  $upstream_http_x_auth_request_email;
      proxy_set_header X-User  $user;
      proxy_set_header X-Email $email;
      proxy_set_header Origin "";
      proxy_set_header Accept-Encoding "";
      proxy_hide_header l5d-remote-ip;
      proxy_hide_header l5d-server-id;
      sub_filter_once off;
      sub_filter '<head>' '<head> <base href="/linkerd/">';
      sub_filter 'src="/' 'src="/linkerd/';
      sub_filter 'href="/' 'href="/linkerd/';
      sub_filter '/\\/api\\/v1\\/namespaces\\/.*\\/proxy/g' '/\\/linkerd/g';
      sub_filter_types text/html text/css text/javascript application/javascript;
spec:
  ingressClassName: nginx
  rules:
    - host: k2s.cluster.local
      http:
        paths:
          - path: /linkerd(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: web
                port:
                  number: 8084
---
