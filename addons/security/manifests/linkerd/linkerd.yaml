# SPDX-FileCopyrightText: Â© 2025 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT
---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["workload.linkerd.io"]
  resources: ["externalworkloads"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "update", "patch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRY2U1OFNNTXlNTUg0OXJ3UGdwV3BoekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEF6TWpBeE1qQTNNamhhRncweU5qQXpNakF4TWpBM01qaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBNUpDcjZ3TVlnekZjRUpzdnhrdWJwYWowbTZjRzZFVmZEVmVodlg3aXlscnpvNjZyNHZKdwptR3ZjZDVXZHlBUmFKa3ovUmtTQk13cGtpdjdHazdablQ0RGNXdUtOanpJR0VVTk9URklYM1VPTTk5akxtTFd4Cjh5eDl1cnNBSVZOa01FVUo2U2VVOTIzZjBmS05LanIvdFQwOGFlVnVNS0dxQklGSXp5SDAxYXczQVh5bVN5NnIKTmpEM0piTVV0WU1ETHAyZlpHd05hTjBqYTR4QlFiM0RZYWs0RllTajRxVnVDUHJVWlJ0ZEU3Qmx5dThJbjhwMApaWlFHbi9BMDBhNHM1SmdIdHpjVUJtME1DS3ZqN0I0V052WGcvQ2xncGNtaTFxRzNZOG5sbjREVzIwenlCZTVqCm1IYXJaZU8raWNOTTE5TEZiK0dCak5VTms5NnVRakIybndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJkdVhKaStLS0dvcks0ZHR5d1JoSnh0czMxZGduZG4raVplUTZ0UUl2M1kKNE5VL05CaWpUYVhZdFEwR1JXSDI3MnI2aTNXWVhHOVUweEdzRzl2YSt5NTc0TXpoVjd1OThIc1gyZTNabGJiQgpyYzlHVGJpZ2Fic0ZRY0w0SllzRzJ3aHUxdUtLN2MyakJ4Sk9qSzBSKzJYaGR5VW1pcVl0ZDdudDVpb0theGxxCnVpaGtXSEthWkMrVjUxMFhaWWMyN0pSSmR6T2Z2ZXBTWW5rNVd0MDl6YkpzYVpuN1o2QWFvRWNlRW1FQ0FZdW0KWENDSTAwSWYwaWtpczQzUEw3ekVCeXhKdWJrOHgxTExCb0g4WTE3NEhBRVFMZjVBckhxVGNZT0s5RUFPc2lUZgorMTMrOE5TR1A0Wm9Mby8yOVFrd1pQL0dYZWhwOUR4bEhhSXFiR204bDdrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNUpDcjZ3TVlnekZjRUpzdnhrdWJwYWowbTZjRzZFVmZEVmVodlg3aXlscnpvNjZyCjR2SndtR3ZjZDVXZHlBUmFKa3ovUmtTQk13cGtpdjdHazdablQ0RGNXdUtOanpJR0VVTk9URklYM1VPTTk5akwKbUxXeDh5eDl1cnNBSVZOa01FVUo2U2VVOTIzZjBmS05LanIvdFQwOGFlVnVNS0dxQklGSXp5SDAxYXczQVh5bQpTeTZyTmpEM0piTVV0WU1ETHAyZlpHd05hTjBqYTR4QlFiM0RZYWs0RllTajRxVnVDUHJVWlJ0ZEU3Qmx5dThJCm44cDBaWlFHbi9BMDBhNHM1SmdIdHpjVUJtME1DS3ZqN0I0V052WGcvQ2xncGNtaTFxRzNZOG5sbjREVzIwenkKQmU1am1IYXJaZU8raWNOTTE5TEZiK0dCak5VTms5NnVRakIybndJREFRQUJBb0lCQVFDL280RlJ3YjI2dWhjTQpJV0hVTEM2cm5sYkJiekQrYkxPK3R4djRpenZTR0tJeE9sSUtMZVkwRmpPNjNHcDNleGF2Q0YzODU1RkFYMVZmCnFUQ01SeUtsNlZCWXI1MnJVM0Q4NW1idTNPSC9kaFRxOWczMjAxa0puK01uUG9Wa2E4d1VJTDZuaTdWK0k5VEcKN2t4bi9TSExMelhKUUVHOGFyL25tUktZQVV1TUhvd3d2cU9mMVVNNVZiSGVmK0U5RHE0TUQxNnpMWTBPcURPNgp0dncwS29pamNPRW5OOTdNVnBJOXB3L1Ewd2xUZkx6OUVCS0dRSmVLUlJGRWpaNjVGb2JFSjdpdkdROVZzcjdsCkVZOXhPc2R0cVQ0cW5OZDh5bHo0UzQ5a2hKUUl1bVJXRGxRWjNFTzFSRjFOT1AzV2wzN0dMSFJaZDhOblVVQ3kKR2pOOTVOemhBb0dCQVBVWTZzTnRhZzNnNnpYU2NObTF1ODlhWnV6SjU4K1BiYWFUb1Bwc2lqY0l6SlRlUnZaNApxS0syekhPQ1pwOWdmR243bHliSzVQZ0V5d0hka1JtdU4xUVhpSzFiOGZyRFNKVHpCd2FEcElWaVZpS28vbEFkCk0waUI5anRpbW5RRlJBYWFOQ1VBQXF0TjJjZnV5UytkZnNqZll5K2dHS0V4eFVwdzQzU29LWlBSQW9HQkFPNjcKZmRHWksrSDZpODRQeVJpMXpoZXBwTWRKVU9lSys5RElXSVhXcnlGVlJhb014VVlLeVZmNi9tWTNRWHdSY1RvVAptLzhuSytRL2hLSWRQUkVxVHBTN1dEM2RIa3d4c2RKYmRIbTdqMTd1bTZkZDNXeVRaK2preEI4MnNVbldiL3RFCmV4UXpUUlFGcElXU2lLV2gxZ2RnRTNDUnJVT09lbmszcVp1MUppOXZBb0dCQU15SEUza3JkK0hHL0dDNGtJV00KbXdJSW5YVWhjN2tJSm1kb01HQnBiTmxLRlhaeEdtU1pBWmh1MUtQYmdJbWsrWTF6Ym9ubnJEU3Z3engyU1p4Vgpma1JGTXovL1J5bU1CcWlOT1NLZGZnLzBwSTVkMllLL0swbHBjakhTTWJONXBXK2hCTHlQaXFxcTEzNTQ3Qmc0CjVGRDU0UW9nSGcxOXUvWkh4L2RVVVFYUkFvR0JBSlBMdFdnV2VNbHRNREpCS1pGSHRMQ0hrUURqamRmYS9telMKSzZPb05rSGZwY0pTSjZ0bU1DSnN2Q1NSM3RPdGhMaWN2VDNvaFU3SVdCZDVISDVNLzlzcVpNWGY1OHJxRlJtVApEdmZ5T3g5ZGZ6WE5jYkN2VFd3c2ZKS0tiSlcyMFJydzJYVzNFT2Z0V2w1clNuZW9TblhFY0NTSHU0bVFZcGc2CjhxRDROQXkzQW9HQkFJcUUxZEVnSGZuOXBVM0xJNEhKU3ZEbk5EMDA2MzlmSURiMURyVEZpNkN0VzBGTjBDODcKNUE3ejdxRmd3bDJidWxpTnZxcTJ6VDV2SjJhVmZjQnEvL1FDdEw1VjhVZEQ2TmEyM1ZRRDN6ZUZ2VUticUhLTwp1d0RoZHkxZnhINXRNN24zVlZPU0ZOU1RPbFp3d0hxOUdkRWMxZzhYc0pVMjFBN3h2Tmt1VUpFTgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRY2U1OFNNTXlNTUg0OXJ3UGdwV3BoekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEF6TWpBeE1qQTNNamhhRncweU5qQXpNakF4TWpBM01qaGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBNUpDcjZ3TVlnekZjRUpzdnhrdWJwYWowbTZjRzZFVmZEVmVodlg3aXlscnpvNjZyNHZKdwptR3ZjZDVXZHlBUmFKa3ovUmtTQk13cGtpdjdHazdablQ0RGNXdUtOanpJR0VVTk9URklYM1VPTTk5akxtTFd4Cjh5eDl1cnNBSVZOa01FVUo2U2VVOTIzZjBmS05LanIvdFQwOGFlVnVNS0dxQklGSXp5SDAxYXczQVh5bVN5NnIKTmpEM0piTVV0WU1ETHAyZlpHd05hTjBqYTR4QlFiM0RZYWs0RllTajRxVnVDUHJVWlJ0ZEU3Qmx5dThJbjhwMApaWlFHbi9BMDBhNHM1SmdIdHpjVUJtME1DS3ZqN0I0V052WGcvQ2xncGNtaTFxRzNZOG5sbjREVzIwenlCZTVqCm1IYXJaZU8raWNOTTE5TEZiK0dCak5VTms5NnVRakIybndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJkdVhKaStLS0dvcks0ZHR5d1JoSnh0czMxZGduZG4raVplUTZ0UUl2M1kKNE5VL05CaWpUYVhZdFEwR1JXSDI3MnI2aTNXWVhHOVUweEdzRzl2YSt5NTc0TXpoVjd1OThIc1gyZTNabGJiQgpyYzlHVGJpZ2Fic0ZRY0w0SllzRzJ3aHUxdUtLN2MyakJ4Sk9qSzBSKzJYaGR5VW1pcVl0ZDdudDVpb0theGxxCnVpaGtXSEthWkMrVjUxMFhaWWMyN0pSSmR6T2Z2ZXBTWW5rNVd0MDl6YkpzYVpuN1o2QWFvRWNlRW1FQ0FZdW0KWENDSTAwSWYwaWtpczQzUEw3ekVCeXhKdWJrOHgxTExCb0g4WTE3NEhBRVFMZjVBckhxVGNZT0s5RUFPc2lUZgorMTMrOE5TR1A0Wm9Mby8yOVFrd1pQL0dYZWhwOUR4bEhhSXFiR204bDdrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQWpiS2h3MitKM0h4OXFSNW0xeWVMVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd016SXdNVEl3TnpJNVdoY05Nall3TXpJd01USXdOekk1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhd3JMeXlTTHEwaU8xWEVuWDgxV1RXeUFNY1hVZXEyR3E2NGpxcVdlZQpqUDdRdUJ0RlZZUmtWQ0Y0RkpibTdvUmFZaGJCdWpDcWdYUEEvLzVvTEV0M3o1a3JwcEhUeDl3KzNFWW1VeitPCjc0aVROVnJOMjBIMWhwQkNyY2FXd1NkWjhhSzY0MW9SOWZFQ251UUQrSXVQdlhobi93S0hZMll6NFhEd3ZSYUoKa20yTVJsUUFuNzNUQW9uZkNJczJqOVpTQTF2Vi9EamcrQkRPK05Ba3l0UHJpSnN4eUhSY0dOenFNcjVSL0xXZApPVUx6ek5DOFMvcHA3d1lpUHQrYzJacDJNWmczekN2dGI2Um10OG9mQUJ5bWErUkxVU2doQThpQXc1SVl3MUlvCitvZk5tb3ZmYkF6Qk0zdUt5czVTZnR3Nld0UmRNMGxuclhxRHZ1V2lacC9UQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJUEpvRUNFMVBmU0kydTQ4TzBCbG9QRTRaUkMKMmpESll6cENSRzFsUGYwZ3g2VEtQMlpKT29oUElpdjdBbk1sZnpkeHdzR3dnZXAxVXhoU25EdXVNdW1xdEc1OAphek9qMWVwbmR2L3FEdXc0eGYzWEJSc0NFNXFTazQ3S2V0TGVzVWxHM1UvY1Y1N2RXVXJOWXpUV3Jab0lhblBGCmJNNElTcmJKTVFoV2pvNmM5Z2tibWVwOXd4bmc0WWpIcFBjMXhVOFFMOE5NcEE4MWI1UURQWElHV1ZMZlVSTWUKSjl4SVVGNXdvYnZvNHMrNlc5NjRVdGtXSnVYd2x1QUI3b2NhanBXMHQzQXRBZlE0U3RTTmYvbS9hcmVleHhNegpOZVZLYnRhbW1wc01sdG9qM2l5WkRRRkFUUXY1bUo0MnVFSFhib0xDQm9vWUFFa1VPMm5JVmtrUVBidz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnNLeThza2k2dElqdFZ4SjEvTlZrMXNnREhGMUhxdGhxdXVJNnFsbm5veiswTGdiClJWV0VaRlFoZUJTVzV1NkVXbUlXd2Jvd3FvRnp3UC8rYUN4TGQ4K1pLNmFSMDhmY1B0eEdKbE0vanUrSWt6VmEKemR0QjlZYVFRcTNHbHNFbldmR2l1dU5hRWZYeEFwN2tBL2lMajcxNFovOENoMk5tTStGdzhMMFdpWkp0akVaVQpBSis5MHdLSjN3aUxOby9XVWdOYjFmdzQ0UGdRenZqUUpNclQ2NGliTWNoMFhCamM2aksrVWZ5MW5UbEM4OHpRCnZFdjZhZThHSWo3Zm5ObWFkakdZTjh3cjdXK2tacmZLSHdBY3BtdmtTMUVvSVFQSWdNT1NHTU5TS1BxSHpacUwKMzJ3TXdUTjdpc3JPVW43Y09sclVYVE5KWjYxNmc3N2xvbWFmMHdJREFRQUJBb0lCQURBajVHbFZKZC95K25TdwpxSGRqVHhPc1cvTWhESnNCTCs4REFoQlIwMEdxMlhCbzgyZGdtRS9UeThHM0ZqWWZpdlN3M1Qwb2tna1RqN3VMCkdoc21sRHo3YkVPVTFrWjZsdGNtZGpGODVHRzZDSjRNZ2IwSFlRNTgzRVl3STZHTlEvR2hJU1JyWDZqUUxJZGQKRytSYno2cUVFWGtoUHhjNElvZU1OdVJqV0JCUnhuSG1uSW1uaVJQNU5iSEJxN1duQjgvTnJRWEdxV2haaGQzWQpRWlFzQjAxNGxhVUkwWFZsUnp2N2ZvQmphcVVrYVRabk16ZEY4cDk3NW1LQ0JXdVQzNDFHMFcwZkorOG03NWJaCnhyQ0JEb1dUU2lIN28rWiszZjJDTnFHRzUrWDBZU285eGM5RGpxa0NNeDZEeUUrVVBuY3RIN0I2NmtGUUtvOVQKZTlzVTI5RUNnWUVBL1JYV3pXY2J6MnBMcmlJMXpPZWl0ZU5vRHJsYXZ5ZHh6UkIrQSs5cEpGdzZMWXJKZDN3TgpXVk91OTZWbzJ3by9pWUhEL1lFaTJIM1RzWnl4ZVc3TzI2QjNDOW5LT0tHNm5Wb2M3ZFAzNEQzc3JkY2FMc3hZClZtOWZBYTF3M2NwM0FQWGhNbnVYbnVEaFVpWUozSWF6eFhXcTRRNEYwVFNEVDhZZUJ0MFZVYlVDZ1lFQTNVZXAKWXBpN3A4VW5sTGZCL3dvS1k2Z2d2R3NQREFzTjhtTGlWR3RpMU1Zb2JBL0FrVlovOG5qQWNIR0tValFoK2dJRgpQd3BLU3VhaFdaZFV6N0puUnY5ZGZLUWwyK1VYeDI5R084bGl5Qmc3VnVFc0hOUmp5NWg0d3d4NGhhMjJXRUVCCkdMQXJPelN4TzJGTFIwdHBJOWZVYmkrMmRNQ1BHWFhxT3Y0L3dHY0NnWUVBazJUY3JOT1lCcnhKUnlqMVhGaXIKRW5OV2J2elVOTytyLzFuVGlrY3NYTmk1cVR4akNRdGVXdCs1enRDdXVLTEhUallkQnM3bWxGN3pvMFUydHhvcApydzlOUmNHWlhGSVVkUCsrU1dSaHdGOVFNQTVPV1dMNUw1MjlIeVQ3enEvVGp1T2tPOXB1KzBETStTTGVLMmpuCjJlQWxuTnlsMXFsV3NHY1pwYldzYk9FQ2dZQnpKaStIRjJQUDBsRGVteUZnenFESmExeGRzSGlNRTlTV0pjOFIKanpCRytUZGZ4SEs1THdJMTg1Qnc4eVMvMGxFOEFJRXFaUGgwTWNBVkZ5TVRVZ3RjYnRiL1hZdzErZWw5NXZIdAplc2JreVhkWHBxV0YreUJUZW15ZFU0Z0VTSGx6UTZDR2NHYU8wTVRKMmIrS3dqdGNZNXd3R3JRZjNYU2FFenBvCnFKWVVVUUtCZ0RzcHlkUEVMczNWekpIOFpCZ2FHdlVtNis2NWJBNmhaVnI1Q3BjYlhQWDZUY3VDZHI0VElTR3EKdXZlYkZ4SVFBc2h4Q2ptYmF0aEM3TWcwY1FkT2lxLzlnempoL1ErY09wTURFS0ZWY20yN0pqWHdMcUtmQVB4TgovUWM5eWZDcmxLSU4xQmE2QThGSlpsVnNnNld1Q25laTRvM1lBdzd6b2tpMW1DZWhpcXM4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQWpiS2h3MitKM0h4OXFSNW0xeWVMVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd016SXdNVEl3TnpJNVdoY05Nall3TXpJd01USXdOekk1V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhd3JMeXlTTHEwaU8xWEVuWDgxV1RXeUFNY1hVZXEyR3E2NGpxcVdlZQpqUDdRdUJ0RlZZUmtWQ0Y0RkpibTdvUmFZaGJCdWpDcWdYUEEvLzVvTEV0M3o1a3JwcEhUeDl3KzNFWW1VeitPCjc0aVROVnJOMjBIMWhwQkNyY2FXd1NkWjhhSzY0MW9SOWZFQ251UUQrSXVQdlhobi93S0hZMll6NFhEd3ZSYUoKa20yTVJsUUFuNzNUQW9uZkNJczJqOVpTQTF2Vi9EamcrQkRPK05Ba3l0UHJpSnN4eUhSY0dOenFNcjVSL0xXZApPVUx6ek5DOFMvcHA3d1lpUHQrYzJacDJNWmczekN2dGI2Um10OG9mQUJ5bWErUkxVU2doQThpQXc1SVl3MUlvCitvZk5tb3ZmYkF6Qk0zdUt5czVTZnR3Nld0UmRNMGxuclhxRHZ1V2lacC9UQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJUEpvRUNFMVBmU0kydTQ4TzBCbG9QRTRaUkMKMmpESll6cENSRzFsUGYwZ3g2VEtQMlpKT29oUElpdjdBbk1sZnpkeHdzR3dnZXAxVXhoU25EdXVNdW1xdEc1OAphek9qMWVwbmR2L3FEdXc0eGYzWEJSc0NFNXFTazQ3S2V0TGVzVWxHM1UvY1Y1N2RXVXJOWXpUV3Jab0lhblBGCmJNNElTcmJKTVFoV2pvNmM5Z2tibWVwOXd4bmc0WWpIcFBjMXhVOFFMOE5NcEE4MWI1UURQWElHV1ZMZlVSTWUKSjl4SVVGNXdvYnZvNHMrNlc5NjRVdGtXSnVYd2x1QUI3b2NhanBXMHQzQXRBZlE0U3RTTmYvbS9hcmVleHhNegpOZVZLYnRhbW1wc01sdG9qM2l5WkRRRkFUUXY1bUo0MnVFSFhib0xDQm9vWUFFa1VPMm5JVmtrUVBidz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httplocalratelimitpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
    - egressnetworks
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["gateway.networking.k8s.io"]
    apiVersions: ["*"]
    resources:
    - httproutes
    - grpcroutes
    - tlsroutes
    - tcproutes
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httplocalratelimitpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
      - egressnetworks
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
      - grpcroutes
      - tlsroutes
      - tcproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
      - httplocalratelimitpolicies/status
      - egressnetworks/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
      - grpcroutes/status
      - tlsroutes/status
      - tcproutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd


---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUt4VzJnWWZHeVdDYnlPVE91SnJMYnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TlRBek1qQXhNakEzTWpoYUZ3MHlOakF6TWpBeE1qQTNNamhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3ZNMzB5emJvTnRGTjA4QndDK2QyRDhYek16ZUwzNk54RnBSbzdSalJRcDlSTApvbGJIRnJ0WGRzSStUcUtKeVdKR1U5RXZjcG1SMlNrTmc0Mjg1MnJGL29pNWRRcWtIbUR0N0lLQjcvRUI0RjNJClZtOTNxY1NQemdEejFvb21YWEMvaUdyRDBscHdhMWIvK2t4c0FZS2llbENtdytrNnk0L2lXVm5vQm9XNmltY0sKUnhjMGpUbThXTU90dElwREkwZWhSZjAyYWJWM3pEbjhadXJVU28yRHpiSi9NZHl5MDkySGdtZzZmcHRZMkJIbwprS1ZpRWZURUxtWjBERWxsNUJzL2R6UUI5ellPRDU0OUppaFBJWUkySUNTeFo4WDV1cmdBUVdxd0V3M3dSUWE2CnFET3loYURMdlR1bmZJYVAvUjBZckJPVDJpSWE5cEltVW9IK29QOVBBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNUWWhKcWwzcTVITWpzSTNCM0JzaUZNMmpKRzNnVkt1bSsKUUFIUGRoaXhXeG5OYm5NY1hlNlNxdlp5bzZCNERFWTZ0ZFlJYzVvWllzOVZIVTZBR2hRWjRaWHZURHkwVGRsQgp5UWR6SFNUNlRLSDEwenBITEQ4UXA2YlFmaGxhUHcza0pWMEZYVVhBVk5RY0JCLzZLZmNYNlUrdHlHdGNjb3NhCmYrbkU4V1lRU3djZ0pEaUZrYm55R2tzVGpkYktVdjVPUHdsQTJBNmJxeFVLWFBOV1lMQXlySzhjRmFJTmw1OTIKLzVES2RBT3BaQzVUOWI1ZGFQeHF6dndqNC9MS1dZNTN2VW4xenNjSU0vQVAzNW5WcTVSeGpmeHlKMGVRZ2hGbwppVTM3anF2aXc1VTlmbThTcTlqajdNVE9PMkxKTEFJUm5VLzFtRm4vbGl4NjhJZ2ExaE54Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcnpOOU1zMjZEYlJUZFBBY0F2bmRnL0Y4ek0zaTkramNSYVVhTzBZMFVLZlVTNkpXCnh4YTdWM2JDUGs2aWljbGlSbFBSTDNLWmtka3BEWU9Odk9kcXhmNkl1WFVLcEI1ZzdleUNnZS94QWVCZHlGWnYKZDZuRWo4NEE4OWFLSmwxd3Y0aHF3OUphY0d0Vy8vcE1iQUdDb25wUXBzUHBPc3VQNGxsWjZBYUZ1b3BuQ2tjWApOSTA1dkZqRHJiU0tReU5Ib1VYOU5tbTFkOHc1L0dicTFFcU5nODJ5ZnpIY3N0UGRoNEpvT242YldOZ1I2SkNsClloSDB4QzVtZEF4SlplUWJQM2MwQWZjMkRnK2VQU1lvVHlHQ05pQWtzV2ZGK2JxNEFFRnFzQk1OOEVVR3VxZ3oKc29XZ3k3MDdwM3lHai8wZEdLd1RrOW9pR3ZhU0psS0IvcUQvVHdJREFRQUJBb0lCQUdJQ1ZjbHoyTjhOdjVvdApNQjVpRlE5WXFrNFA1eVowTjdVbU5WUnZZNWl6S2tuZFdOb3ExMGFJZ3dWRURCMDBjU3VTZS9VbEVNL01RZkR6ClpQa0dKRzc2Z3hYc2FiV0I0UXQ0UVZIYkhtSEVWL0pZbUNiQzY5amVqeDNaS0pOcHRrY1BVMXFVZEU5clhOSDUKL1lKMkhkUXl4S2RsOVRVVTV6cmliUzhsWnU0QXpWVEowNTQweCtTOHlIYjM1S0lqRVUzSXJzSm9adHJlWk5YcQo5UDcvcHkrZkF6MHBtd083VFJEY1dXanNUZDFJby8rYjBsZ1EwSGFnMk0xRjZVNWZxNTZxak00bVptSzFaNW9BClFoQmljdWZQRVordElFeWE4NThBdzZ1R1R4WklROGg5ajZCdHhYa2pnSnJ3d2VnOHFxY3ZnTjkyL3paajJCNU0Kd3FHUkNyRUNnWUVBNFlicE5MbUxsZXhqZjhHOUZPTUcyTDNaT1BxU1lrVFZtdElJczBwWm5KMDZtQUE5S3BveApGTFB5SFB1L3Mxc3prSXpBbUs1RGs1V3JBM3Z6QTJZVmxrY3hhM1dZUmhrNExzcHlza3ZWQmFMeVNUV2gveGhzClRPVW43SkdWa1lDb3IwdFpiZWNLUnhjZzI5amlSUmlKUnFEUGViMFpYaGFBY0RUMC94UlpFd01DZ1lFQXh0L0kKSVhiYkc4NTVGeVorUVdWZE9QMXFJeUtWWXEySGNmVVFRWERNaEpjS1N0UTVCdmY3aDNRRU1PVy9BeTh3T0diTwpBdERONHhzWGwyKzFINWVsVmVCSFlROUp4cWNuUmdDNjhpekZ3TllJSUhRV0d5bkt3OHp1dGo1OEx0cWVSTEFjCm56eUZxRmFoZVRGdElLZW9Oei9qSXVjVVdBNGFxMmRFNWRnSHlzVUNnWUFBbUdlVE1RNHlSaDU1SHR6TjZrK0IKVVBiNjFJYUFaZWdlY1lGK1g2cmU0L2Rjb1Z1SCtrSTQ2TVN4Mk9SSHArejU2N1V5Y2Z0UnIycDFKdVdjVTYrbwo1dVUxZ0dqM2ZtZU1rQkkvY0QzT3R3Qm11eEtEWnVBYVQ5eU1IbEpEd1JBdzdrVDlLa2YzcWhMM0lacHZUa0pHCmduUXB3UnNKQ1l3clA2aUo1OWJZV3dLQmdBMG0wMmRUSXQ1TjR6Z2l0WXJCbDA2amc1ZGJQQ0hRYy9xWFNFSHIKb2JySytrVkVqNWprWVYvdHpqRWxvR0luaHJyVUlaK1NDMnVQYVJuOHF5K3hxWjlxTzQ0eG9xRmVnSHhpby9wTAo5Ni91OTQ2ZDNyQmhMU1dSc2QrZmRqcnEvamh3cFJQcXZyUUpOcGg3S2twVWpBMUxUa3dLbUEvU3J2VFMyWDJSCnNjSTVBb0dBRGw5eTEweUVvWHJObDBnUkNyNGNjdlRtRGN6NnRsVUdTb2ZpUFlCNTZsRG1Pb2JqalRNY0JSTUkKRlAza292M1BIUk1VWUw2b3dlclU0UmpJWFVuOHhUbjYzc0h4VmsrREF1UE1yZHg2MmNNZmtIeC9kbWxTdFZrSgozc2FNaUZVSkdYb2l6eGpQYjR6N2liRTFOWmR3MHh4QmpsclI3bEViR1NPbmg1RFVTa0k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUt4VzJnWWZHeVdDYnlPVE91SnJMYnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TlRBek1qQXhNakEzTWpoYUZ3MHlOakF6TWpBeE1qQTNNamhhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQ3ZNMzB5emJvTnRGTjA4QndDK2QyRDhYek16ZUwzNk54RnBSbzdSalJRcDlSTApvbGJIRnJ0WGRzSStUcUtKeVdKR1U5RXZjcG1SMlNrTmc0Mjg1MnJGL29pNWRRcWtIbUR0N0lLQjcvRUI0RjNJClZtOTNxY1NQemdEejFvb21YWEMvaUdyRDBscHdhMWIvK2t4c0FZS2llbENtdytrNnk0L2lXVm5vQm9XNmltY0sKUnhjMGpUbThXTU90dElwREkwZWhSZjAyYWJWM3pEbjhadXJVU28yRHpiSi9NZHl5MDkySGdtZzZmcHRZMkJIbwprS1ZpRWZURUxtWjBERWxsNUJzL2R6UUI5ellPRDU0OUppaFBJWUkySUNTeFo4WDV1cmdBUVdxd0V3M3dSUWE2CnFET3loYURMdlR1bmZJYVAvUjBZckJPVDJpSWE5cEltVW9IK29QOVBBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNUWWhKcWwzcTVITWpzSTNCM0JzaUZNMmpKRzNnVkt1bSsKUUFIUGRoaXhXeG5OYm5NY1hlNlNxdlp5bzZCNERFWTZ0ZFlJYzVvWllzOVZIVTZBR2hRWjRaWHZURHkwVGRsQgp5UWR6SFNUNlRLSDEwenBITEQ4UXA2YlFmaGxhUHcza0pWMEZYVVhBVk5RY0JCLzZLZmNYNlUrdHlHdGNjb3NhCmYrbkU4V1lRU3djZ0pEaUZrYm55R2tzVGpkYktVdjVPUHdsQTJBNmJxeFVLWFBOV1lMQXlySzhjRmFJTmw1OTIKLzVES2RBT3BaQzVUOWI1ZGFQeHF6dndqNC9MS1dZNTN2VW4xenNjSU0vQVAzNW5WcTVSeGpmeHlKMGVRZ2hGbwppVTM3anF2aXc1VTlmbThTcTlqajdNVE9PMkxKTEFJUm5VLzFtRm4vbGl4NjhJZ2ExaE54Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli edge-25.3.3
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controller:
      podDisruptionBudget:
        maxUnavailable: 1
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-25.3.3
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
      podAnnotations: {}
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: true
    disableIPv6: true
    egress:
      globalEgressNetworkNamespace: linkerd-egress
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeat: null
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      additionalEnv: null
      experimentalEnv: null
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNTAzMjAxMjA3MThaFw0yNjAzMjAxMjA3MzhaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEcTnkA930w9LbiJtA/Q1DRXDWP/OThvPIzRuVeO2cyIDjqI3AV/wgrOLT+QU0
            a5TmoNQuCO9wYjtZmc88nfyFVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSp5/WtzDr/FgeyXZtbu8pxD2klqjAKBggqhkjOPQQDAgNHADBEAiAFDh8eRGhx
            TXCmdE+G7v0oP5DK8d4B11NG2a8MCp5LCAIgZnghjYTkLaqPgoSq/ZNwKnlzeStQ
            c5tLPsZwDYfwILM=
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      podAnnotations: {}
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNTAzMjAxMjA3MThaFw0yNjAzMjAxMjA3MzhaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEcTnkA930w9LbiJtA/Q1DRXDWP/OThvPIzRuVeO2cyIDjqI3AV/wgrOLT+QU0
      a5TmoNQuCO9wYjtZmc88nfyFVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSp5/WtzDr/FgeyXZtbu8pxD2klqjAKBggqhkjOPQQDAgNHADBEAiAFDh8eRGhx
      TXCmdE+G7v0oP5DK8d4B11NG2a8MCp5LCAIgZnghjYTkLaqPgoSq/ZNwKnlzeStQ
      c5tLPsZwDYfwILM=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: edge-25.3.3
    networkValidator:
      connectAddr: ""
      enableSecurityContext: true
      listenAddr: ""
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      additionalEnv: null
      await: false
      capabilities: null
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      defaultInboundPolicy: all-authenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      enableShutdownEndpoint: false
      experimentalEnv: null
      gid: -1
      image:
        name: shsk2s.azurecr.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logHTTPHeaders: "off"
      logLevel: debug,linkerd=debug,hickory=error
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      outboundTransportMode: transport-header
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 100Mi
          request: ""
      runtime:
        workers:
          minimum: 1
      saMountPath: null
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: shsk2s.azurecr.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.2
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources: null
      runAsGroup: 65534
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      additionalEnv: null
      caBundle: ""
      crtPEM: ""
      experimentalEnv: null
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
      podAnnotations: {}
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    revisionHistoryLimit: 10
    spValidator:
      livenessProbe:
        timeoutSeconds: 1
      readinessProbe:
        timeoutSeconds: 1
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOVEF6TWpBeE1qQTNNVGhhRncweU5qQXpNakF4TWpBM016aGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVjVG5rQTkzMHc5TGJpSnRBL1ExRFJYRFdQL09UaHZQSXpSdVZlTzJjeUlEanFJM0FWL3dnck9MVCtRVTAKYTVUbW9OUXVDTzl3WWp0Wm1jODhuZnlGVnFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU3A1L1d0ekRyL0ZnZXlYWnRidThweEQya2xxakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFGRGg4ZVJHaHgKVFhDbWRFK0c3djBvUDVESzhkNEIxMU5HMmE4TUNwNUxDQUlnWm5naGpZVGtMYXFQZ29TcS9aTndLbmx6ZVN0UQpjNXRMUHNad0RZZndJTE09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUorNTRFek5FZlF5MTRPaDY1a3Fkc2ZadGN6dDJsRmlUV2M3dDBOQlc1Z0tvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFY1Rua0E5MzB3OUxiaUp0QS9RMURSWERXUC9PVGh2UEl6UnVWZU8yY3lJRGpxSTNBVi93ZwpyT0xUK1FVMGE1VG1vTlF1Q085d1lqdFptYzg4bmZ5RlZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNTAzMjAxMjA3MThaFw0yNjAzMjAxMjA3MzhaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEcTnkA930w9LbiJtA/Q1DRXDWP/OThvPIzRuVeO2cyIDjqI3AV/wgrOLT+QU0
    a5TmoNQuCO9wYjtZmc88nfyFVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSp5/WtzDr/FgeyXZtbu8pxD2klqjAKBggqhkjOPQQDAgNHADBEAiAFDh8eRGhx
    TXCmdE+G7v0oP5DK8d4B11NG2a8MCp5LCAIgZnghjYTkLaqPgoSq/ZNwKnlzeStQ
    c5tLPsZwDYfwILM=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  type: ClusterIP
  clusterIP: 172.21.0.45
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.3.3
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-25.3.3
        linkerd.io/proxy-version: edge-25.3.3
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 3def0954206a38cdf6a6f30ceb9e5d5c68d41c9fddff92fee4e13a81282fd15e
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "debug,linkerd=debug,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  type: ClusterIP
  clusterIP: 172.21.0.46
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  type: ClusterIP
  clusterIP: 172.21.0.47
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
spec:
  type: ClusterIP
  clusterIP: 172.21.0.48
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.3.3
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 95e0d47b2c82db559517bfad9b6082c4a13831868267f20e790f513a1a4768da
        linkerd.io/created-by: linkerd/cli edge-25.3.3
        linkerd.io/proxy-version: edge-25.3.3
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 3def0954206a38cdf6a6f30ceb9e5d5c68d41c9fddff92fee4e13a81282fd15e
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "debug,linkerd=debug,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -outbound-transport-mode=transport-header
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-ipv6=false
        - -enable-pprof=false
        - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
        image: cr.l5d.io/linkerd/controller:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-authenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --global-egress-network-namespace=linkerd-egress
        - --probe-networks=0.0.0.0/0,::/0
        image: cr.l5d.io/linkerd/policy-controller:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
          initialDelaySeconds: 10
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity

---
###
### Proxy Injector
###

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.3.3
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 6da5567fcbdd57e80db53c2ac93c3c568542f0d0bfbbbe9437c550e223cce5e8
        linkerd.io/created-by: linkerd/cli edge-25.3.3
        linkerd.io/proxy-version: edge-25.3.3
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 3def0954206a38cdf6a6f30ceb9e5d5c68d41c9fddff92fee4e13a81282fd15e
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "debug,linkerd=debug,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.3.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            memory: "100Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.3.3
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  clusterIP: 172.21.0.49
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: ZGlzYWJsZUhlYXJ0QmVhdDogdHJ1ZQppZGVudGl0eToKICBpc3N1ZXI6CiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU5UQXpNakF4TWpBM01UaGFGdzB5TmpBek1qQXhNakEzTXpoYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVjVG5rQTkzMHc5TGJpSnRBL1ExRFJYRFdQL09UaHZQSXpSdVZlTzJjeUlEanFJM0FWL3dnck9MVCtRVTAKICAgICAgICBhNVRtb05RdUNPOXdZanRabWM4OG5meUZWcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCU3A1L1d0ekRyL0ZnZXlYWnRidThweEQya2xxakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFGRGg4ZVJHaHgKICAgICAgICBUWENtZEUrRzd2MG9QNURLOGQ0QjExTkcyYThNQ3A1TENBSWdabmdoallUa0xhcVBnb1NxL1pOd0tubHplU3RRCiAgICAgICAgYzV0TFBzWndEWWZ3SUxNPQogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJSis1NEV6TkVmUXkxNE9oNjVrcWRzZlp0Y3p0MmxGaVRXYzd0ME5CVzVnS29Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRWNUbmtBOTMwdzlMYmlKdEEvUTFEUlhEV1AvT1RodlBJelJ1VmVPMmN5SURqcUkzQVYvd2cKICAgICAgICByT0xUK1FVMGE1VG1vTlF1Q085d1lqdFptYzg4bmZ5RlZnPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJQmh6Q0NBUzZnQXdJQkFnSUJBVEFLQmdncWhrak9QUVFEQWpBY01Sb3dHQVlEVlFRREV4RnBaR1Z1ZEdsMAogIGVTNXNhVzVyWlhKa0xqQWVGdzB5TlRBek1qQXhNakEzTVRoYUZ3MHlOakF6TWpBeE1qQTNNemhhTUJ3eEdqQVkKICBCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNECiAgUWdBRWNUbmtBOTMwdzlMYmlKdEEvUTFEUlhEV1AvT1RodlBJelJ1VmVPMmN5SURqcUkzQVYvd2dyT0xUK1FVMAogIGE1VG1vTlF1Q085d1lqdFptYzg4bmZ5RlZxTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQjBHQTFVZEpRUVcKICBNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCiAgQkJTcDUvV3R6RHIvRmdleVhadGJ1OHB4RDJrbHFqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQUZEaDhlUkdoeAogIFRYQ21kRStHN3Ywb1A1REs4ZDRCMTFORzJhOE1DcDVMQ0FJZ1puZ2hqWVRrTGFxUGdvU3EvWk53S25semVTdFEKICBjNXRMUHNad0RZZndJTE09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpwcm94eToKICBsb2dMZXZlbDogZGVidWcsbGlua2VyZD1kZWJ1ZyxoaWNrb3J5PWVycm9yCiAgcmVzb3VyY2VzOgogICAgbWVtb3J5OgogICAgICBsaW1pdDogMTAwTWkK
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
