# SPDX-FileCopyrightText: Â© 2024 Siemens Healthcare AG
#
# SPDX-License-Identifier: MIT

apiVersion: v1
kind: Namespace
metadata:
  name: security
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: keycloak-config-map
  namespace: security
data:
  demo-app.json: |
    {
      "id": "b48611c1-0108-47be-b4a6-a46384c3e6cc",
      "realm": "demo-app",
      "displayName": "K2S Demo App",
      "displayNameHtml": "",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 3600,
      "accessTokenLifespanForImplicitFlow": 3600,
      "ssoSessionIdleTimeout": 3600,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 3600,
      "clientSessionMaxLifespan": 36000,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 3600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "8ae23b9f-6ba8-4760-a19f-fa97be916833",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "b48611c1-0108-47be-b4a6-a46384c3e6cc",
            "attributes": {}
          },
          {
            "id": "e2440b4e-f539-40fb-8577-50a00cb8b30d",
            "name": "demo-app-role",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "b48611c1-0108-47be-b4a6-a46384c3e6cc",
            "attributes": {}
          },
          {
            "id": "b5399703-f6dc-4dfc-9c71-a1a4437a17dc",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "b48611c1-0108-47be-b4a6-a46384c3e6cc",
            "attributes": {}
          },
          {
            "id": "f1f14af5-0890-4cdf-9c16-ab235129b7b7",
            "name": "default-roles-demo-app",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": ["offline_access", "uma_authorization"],
              "client": {
                "account": ["view-profile", "manage-account"]
              }
            },
            "clientRole": false,
            "containerId": "b48611c1-0108-47be-b4a6-a46384c3e6cc",
            "attributes": {}
          }
        ],
        "client": {
          "sample-client": [
            {
              "id": "0917569f-da15-4b0a-a576-e92810a49c60",
              "name": "sample-client-role",
              "description": "",
              "composite": false,
              "clientRole": true,
              "containerId": "f9a69e1a-6e12-417e-8ce2-5fde216708e4",
              "attributes": {}
            }
          ],
          "realm-management": [
            {
              "id": "49fedec2-0d15-4b03-a75d-4e159f22328d",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "7a982558-9923-4c7a-ad13-602aaf50e9ce",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "44fc08ab-61df-492f-ac2d-511f09ec0d65",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "6a87bab8-e86d-4730-8bd1-2a8dff39dbbd",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "501e89d1-3e16-4c07-acda-0344e5e08844",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "91939c00-796e-4c0a-bf27-77391d90e476",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "f518e442-7db4-43db-8198-3cb12819b5df",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "5d8e9907-2da7-4a10-8e1d-9958583a8b9a",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "5c95f42e-1771-4f7f-a3b5-889002e10de1",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-clients"]
                }
              },
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "5c86fd60-89dc-48e4-b3b2-f721caa86f85",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-groups", "query-users"]
                }
              },
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "77788300-15c6-4032-9abb-c61234b4e959",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "e32ba287-baa4-47b0-b5df-26dcdc76df46",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "cdafb0d8-0c4e-4d34-b0b8-1baae4086f58",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-clients",
                    "view-identity-providers",
                    "impersonation",
                    "manage-users",
                    "manage-realm",
                    "view-events",
                    "view-authorization",
                    "view-clients",
                    "query-users",
                    "view-users",
                    "manage-authorization",
                    "manage-events",
                    "query-clients",
                    "query-groups",
                    "manage-identity-providers",
                    "view-realm",
                    "create-client",
                    "query-realms"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "e17555ab-1a6d-48cf-b0dd-f721fe46f68c",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "0118aed1-328e-42b7-a9ac-6945b3a70419",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "18f54749-6379-49e8-a5e2-da75721608c0",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "8cfc6f08-87d3-40c5-ba59-b2b60d70d0e5",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "c2f61352-b08d-4240-b114-f82e0f32aa5b",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            },
            {
              "id": "d4347158-c96b-4526-8f4d-df6514a0b1bc",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "demo-ropc": [],
          "sample-public-client": [],
          "account-console": [],
          "broker": [
            {
              "id": "1dcd9388-abba-4e55-89e1-140398fe76cb",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "013a3dab-33e9-49d8-8561-96381b41c17b",
              "attributes": {}
            }
          ],
          "sample-client-credential": [],
          "demo-client-credential": [],
          "sample-ropc": [],
          "demo-client": [
            {
              "id": "2cc65374-87aa-4c28-97cf-862cb21ca007",
              "name": "demo-client-role",
              "description": "",
              "composite": false,
              "clientRole": true,
              "containerId": "62f39d0a-dc2a-4221-9768-44193c453570",
              "attributes": {}
            }
          ],
          "admin-cli": [],
          "demo-public-client": [],
          "account": [
            {
              "id": "3a7f8ea3-c13b-4a95-aa61-d9fc8fb8b82f",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "ebbd31fa-d410-49a9-97f2-60a030152e39",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "5ed6f63e-129d-49ec-8e02-a544de6c3bd7",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["view-consent"]
                }
              },
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "43acd9e6-c8d3-42f0-8463-c3ca632108c2",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "aeb9fc00-dffa-4484-af7f-5f23591ee553",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "ef70894f-91b5-4cdd-9365-4399b4528703",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "c030f69e-8b45-4bd6-a834-56b42b9d5d4d",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            },
            {
              "id": "7e14c964-9cd8-43ff-8518-7706e3a199f1",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["manage-account-links"]
                }
              },
              "clientRole": true,
              "containerId": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "f1f14af5-0890-4cdf-9c16-ab235129b7b7",
        "name": "default-roles-demo-app",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "b48611c1-0108-47be-b4a6-a46384c3e6cc"
      },
      "requiredCredentials": ["password"],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": ["ES256"],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "users": [
        {
          "id": "50b2379f-f236-4e93-b779-234943cd30fe",
          "username": "admin-user",
          "firstName": "Admin",
          "lastName": "User",
          "email": "admin-user@mail.com",
          "emailVerified": true,
          "createdTimestamp": 1713238647389,
          "enabled": true,
          "totp": false,
          "credentials": [
            {
              "id": "60ac4e20-807b-425b-bb82-4fabf4abbc15",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1713238673346,
              "secretData": "{\"value\":\"EhUI00ZBj6v9Cnv+P4BprKhOwJB+XA5nby2EHoAiybwqUY8KjZGlew9zSQhaJ96zYlEMtyd9afcKox8hBho1oQ==\",\"salt\":\"gfK6+aLqQyukIt8RDKZSZA==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-demo-app"],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "37e0d70e-a0e7-4dce-a803-c7fe51fdbb9f",
          "username": "demo-user",
          "firstName": "Demo",
          "lastName": "User",
          "email": "demo-user@mail.com",
          "emailVerified": true,
          "createdTimestamp": 1713238532836,
          "enabled": true,
          "totp": false,
          "credentials": [
            {
              "id": "4b84b3a0-017f-4e8f-aef7-1beec6d0c137",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1713238552955,
              "secretData": "{\"value\":\"25jOpnlnL+PeSuRxKvojs6fl/zBTvjM12YaNSeJQ4Jsv9O3hiYL7I2Q/n+a0WgieVPbH6l0iZ8MYtx8D8KPVzw==\",\"salt\":\"bo4HBOMFy45xpoT02YJe4w==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["demo-app-role", "default-roles-demo-app"],
          "clientRoles": {
            "demo-client": ["demo-client-role"]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "23b2cb39-0ff0-4708-8180-cf37ad1bb23f",
          "username": "sample-user",
          "firstName": "Sample",
          "lastName": "User",
          "email": "sample-user@mail.com",
          "emailVerified": true,
          "createdTimestamp": 1713238591849,
          "enabled": true,
          "totp": false,
          "credentials": [
            {
              "id": "9d99a2cf-0252-424a-9f68-d714c1cbe2cd",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1713238611954,
              "secretData": "{\"value\":\"/eyI8vrZa6zOWf22972QhIxPk2D4TsyLeNN/sJPiTKOaqDt7pYmgqF1Jgz3xwwJFy1qc4OFZU1k5iyKnYyjmNQ==\",\"salt\":\"MZ2TyKWjX5DOA/QF3wNL+w==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["demo-app-role", "default-roles-demo-app"],
          "clientRoles": {
            "sample-client": ["sample-client-role"]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "5469422c-b2c3-480f-9034-84f722f3d35a",
          "username": "service-account-demo-client",
          "emailVerified": false,
          "createdTimestamp": 1713239258676,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "demo-client",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-demo-app"],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "a4e52ce4-2bb1-415c-87ec-ba24850d345a",
          "username": "service-account-demo-client-credential",
          "emailVerified": false,
          "createdTimestamp": 1713238818661,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "demo-client-credential",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-demo-app"],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "b2fd2475-7176-412b-b9a7-74e11fa5fc49",
          "username": "service-account-sample-client",
          "emailVerified": false,
          "createdTimestamp": 1713239536157,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "sample-client",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-demo-app"],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "f2215d6e-1fea-41f5-b536-8b8ceb4f75fa",
          "username": "service-account-sample-client-credential",
          "emailVerified": false,
          "createdTimestamp": 1713239386234,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "sample-client-credential",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-demo-app"],
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": ["offline_access"]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": ["manage-account", "view-groups"]
          }
        ]
      },
      "clients": [
        {
          "id": "e326b5f9-66b2-49f3-af4a-d815ae2d3a94",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/demo-app/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/demo-app/account/*"],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "d1dbcf44-1490-4bb9-aea5-ba96df15808a",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/demo-app/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/demo-app/account/*"],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "8e1d017d-cb30-4c36-b6d1-d1d09d52c0ba",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "eeea52f8-4d1a-49bb-81e5-89b2040da967",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "013a3dab-33e9-49d8-8561-96381b41c17b",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "62f39d0a-dc2a-4221-9768-44193c453570",
          "clientId": "demo-client",
          "name": "demo-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "1f3QCCQoDQXEwU7ngw9X8kaSe1uX8EIl",
          "redirectUris": [
            "http://localhost:4200",
            "http://k2s.cluster.local/oauth2/callback",
            "https://k2s.cluster.local/oauth2/callback",
            "http://172.19.1.100/oauth2/callback",
            "https://172.19.1.100/oauth2/callback"
          ],
          "webOrigins": ["*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "true",
            "client.secret.creation.time": "1713239258",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://localhost:4200/##http://k2s.cluster.local/oauth2/callback/##https://k2s.cluster.local/oauth2/callback/##http://172.19.1.100/oauth2/callback/##https://172.19.1.100/oauth2/callback/",
            "oauth2.device.authorization.grant.enabled": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "1e35d022-4b31-4815-a6c0-c64d974390c9",
              "name": "aud-mapper-demo-client",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "demo-client",
                "id.token.claim": "true",
                "lightweight.claim": "false",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "id": "f531f785-96af-4888-bbcc-d4b4550da695",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5d1094ed-13f8-49a5-a2a3-6d17747b68f0",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "225049c2-650b-464b-94f2-3537e4098296",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "2ca04542-9ba8-4499-9c12-9a96cacafb8d",
          "clientId": "demo-client-credential",
          "name": "demo-client-credential",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "fZaU59IsFJT5djUe4Yj1Qs4kaFQ2FX8O",
          "redirectUris": ["/*"],
          "webOrigins": ["/*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1713238818",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "ec0d192c-5cf7-485a-a049-386b657edf60",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1fb34255-fee9-4320-8316-23a7325a6e44",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a5021c64-57d3-4fe8-bb42-1c7fd511f4fc",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "47bf2300-e88f-41f2-83c9-5335e6843c96",
          "clientId": "demo-public-client",
          "name": "demo-public-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "http://localhost:4200",
            "http://k2s.cluster.local/oauth2/callback",
            "https://k2s.cluster.local/oauth2/callback",
            "http://172.19.1.100/oauth2/callback",
            "https://172.19.1.100/oauth2/callback"
          ],
          "webOrigins": ["*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "post.logout.redirect.uris": "http://localhost:4200/##http://k2s.cluster.local/oauth2/callback/##https://k2s.cluster.local/oauth2/callback/##http://172.19.1.100/oauth2/callback/##https://172.19.1.100/oauth2/callback/",
            "oauth2.device.authorization.grant.enabled": "true",
            "backchannel.logout.session.required": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "869d4da0-ec75-43e6-8daf-3e82098cf66f",
              "name": "aud-mapper-demo-public-client",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "demo-public-client",
                "id.token.claim": "true",
                "lightweight.claim": "false",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "f00adb94-1920-4c55-b9e9-69cdab9c8e40",
          "clientId": "demo-ropc",
          "name": "demo-ropc",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/*"],
          "webOrigins": ["/*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "5eb488d3-561a-4440-9dcb-f642a7fae3b1",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "f9a69e1a-6e12-417e-8ce2-5fde216708e4",
          "clientId": "sample-client",
          "name": "sample-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "f0GBomAr8auLt8G7M1zWM4V1Ng4Che1Q",
          "redirectUris": [
            "http://localhost:4200",
            "http://k2s.cluster.local/oauth2/callback",
            "https://k2s.cluster.local/oauth2/callback",
            "http://172.19.1.100/oauth2/callback",
            "https://172.19.1.100/oauth2/callback"
          ],
          "webOrigins": ["*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "true",
            "client.secret.creation.time": "1713239536",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://localhost:4200/##http://k2s.cluster.local/oauth2/callback/##https://k2s.cluster.local/oauth2/callback/##http://172.19.1.100/oauth2/callback/##https://172.19.1.100/oauth2/callback/",
            "oauth2.device.authorization.grant.enabled": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "1bf82702-1104-4d1e-beba-68d701aa33e8",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d8144217-5259-40e4-bef5-736a3b54833c",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5b788ca3-2249-44d2-a50c-02c0ac75c9d6",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "f91fb166-b548-47cd-b459-9f5705808527",
              "name": "aud-mapper-sample-client",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-mapper",
              "consentRequired": false,
              "config": {
                "included.client.audience": "sample-client",
                "id.token.claim": "true",
                "lightweight.claim": "false",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "eff9d1c4-d25e-46a0-988c-97d4e45268a4",
          "clientId": "sample-client-credential",
          "name": "sample-client-credential",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "4wbTYwhXQtD9nIyenhVk1vXrRUeSTMIQ",
          "redirectUris": ["/*"],
          "webOrigins": ["/*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1713239386",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "c9ff469f-7d70-44c6-bdec-5a37363f547d",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d3bc8053-d284-479d-ac74-a51c998b5ef3",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2b34754d-375e-4074-919e-3773248a0c3d",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "ccc4f5f6-d793-479b-baa6-a33c84cbd92d",
          "clientId": "sample-public-client",
          "name": "sample-public-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "http://localhost:4200",
            "http://k2s.cluster.local/oauth2/callback",
            "https://k2s.cluster.local/oauth2/callback",
            "http://172.19.1.100/oauth2/callback",
            "https://172.19.1.100/oauth2/callback"
          ],
          "webOrigins": ["*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "post.logout.redirect.uris": "http://localhost:4200/##http://k2s.cluster.local/oauth2/callback/##https://k2s.cluster.local/oauth2/callback/##http://172.19.1.100/oauth2/callback/##https://172.19.1.100/oauth2/callback/",
            "oauth2.device.authorization.grant.enabled": "true",
            "backchannel.logout.session.required": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "e65ef944-acbf-4609-a2d7-6580ee21d4cd",
          "clientId": "sample-ropc",
          "name": "sample-ropc",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/*"],
          "webOrigins": ["/*"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "72365c41-ae4d-43bf-9f71-dd1b34370aba",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/demo-app/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/admin/demo-app/console/*"],
          "webOrigins": ["+"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "2a92af1e-fea5-44de-abbb-68d6ee9ce1dc",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "1ad32d1d-1f8c-45e5-92ad-d1fad43170b1",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "5d20dc4a-80cd-43d4-a88d-29de479a8886",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "d15bad30-96ab-4d64-87c3-c916fb94d06b",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "412ac8bd-6e42-4ef5-9690-331ab172d006",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "id": "0a9676b6-ca04-4d3a-914d-a4785d289601",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3d698fe5-6450-435e-9ac3-7cdb436d95fe",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "f16c7086-4d41-48d2-b57b-04a2e6f85908",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "31af7237-72ce-47ab-9240-04d5b04a6f00",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "b126aa31-2cce-4d11-91f0-8212116fdf43",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a4fefb64-b4b9-448a-837b-019f85dbbdfe",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "c1c40bcc-ea98-4fca-9274-5dab52490ed8",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "dd6d178c-5d76-460b-8076-3ff198b72855",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "introspection.token.claim": "true",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "0470657b-18c3-4de6-b5ac-43534193be41",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "eb92ff76-d472-4a18-942d-579b3b06c4b1",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "dad14b15-7313-40e4-8042-3df76c632b5f",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "00f274bf-bcbc-4b97-8493-57e1c16fb43c",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9f74d864-7773-4ce2-a62f-ef7b992a0ba6",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "104eda75-9f44-4032-83b9-ff2f9cd1b416",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "dcc1565a-a01a-48af-ac09-0b0fd22d508f",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "79896a37-0dec-49f8-b0e9-43e319e4da96",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7b749931-d996-44f1-aeec-33ef9de70426",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "77d1d4b4-f69e-435d-a382-3b5f2cf56a0d",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "cd3a49ae-6d62-43b4-a13c-dd9beecdb4db",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b85c1eec-0f49-4595-9c7f-fad8e8725662",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "326b5ee5-72ea-4577-9e8e-7144e9676440",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "81c72cc2-56d4-41a8-8458-bb2716f60d16",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "65262918-1605-4b7f-9616-90049424af7c",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "6c978dd1-45bb-413d-87b7-2dfec5298959",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3e2acb3c-94fc-4b86-aab6-242673811c1e",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "827ef422-58ad-4f9c-b4fa-1beec8debdd5",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "8c4dcbce-c53b-4693-a350-1b6644305f3c",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "6f91489b-b8dd-4668-bb60-7a1c1c40f680",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "f95b0abe-fd10-4492-be16-fec30cb2042c",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "86e12b09-3fac-41ec-a5dc-975d35362bb6",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "766ff37a-b4e6-4f90-943d-23b7ef57754b",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "ea4f4af7-2f8c-4845-82da-8f40f20616bd",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1996e3ea-66f8-43e3-b8e4-3cd2ac68ad9f",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "loginTheme": "keycloak",
      "accountTheme": "",
      "adminTheme": "",
      "emailTheme": "",
      "eventsEnabled": false,
      "eventsListeners": ["jboss-logging"],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "2fd41898-e3b2-40ac-be47-6c6cb3ae5cb3",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "44abd8c2-ca81-46b6-a3ba-8105e7a4e19e",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": ["200"]
            }
          },
          {
            "id": "6125f089-40eb-44a9-aded-bda58b1ef564",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "saml-user-property-mapper",
                "saml-user-attribute-mapper"
              ]
            }
          },
          {
            "id": "c5911fba-8bc1-49aa-82f6-09aee72c8472",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          },
          {
            "id": "b37aa977-180e-485f-9da9-d1e76aa7898a",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "4f901f76-dddc-4a01-bfff-a8995cc24849",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          },
          {
            "id": "219e9c6b-5306-47fa-b250-e4109f764595",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": ["true"],
              "client-uris-must-match": ["true"]
            }
          },
          {
            "id": "fe8623df-fe82-4e85-85ed-128d05c89c3f",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-role-list-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "0cde8e12-e3bd-4497-84b6-f16229edebdf",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "kid": ["7c9afea8-a834-4745-b081-c505656fc3aa"],
              "secret": ["NHxNgiGYgKKXH83LEIsU_Q"],
              "priority": ["100"]
            }
          },
          {
            "id": "1a0a0af9-5f16-4059-b244-0a6e4083f232",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "kid": ["22618619-4117-455e-8b65-4699027f377d"],
              "secret": [
                "3niTccgmz8DSbU8Z71P-9jx74O8TBA0Aq_TibF71qfm_dPkhCh7O_bR3Hy8lRRpLK4yBYEZbTFH_nIP4MWJ0Q8WHbD1Otqb3c5zoV2wynJEwf-hslnJPvKdP_Hx0wNcQr9ODnh2JPCthJeQZJCG2fISkhRRf-Lc_Q89-PKOSra0"
              ],
              "priority": ["100"],
              "algorithm": ["HS512"]
            }
          },
          {
            "id": "3e645845-a1e8-4f10-aec7-53d1f3a10be0",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "privateKey": [
                "MIIEpAIBAAKCAQEAzgLOaiEGtdFUL5Fnk3N4sjB67xK316uEiUdymORdKu5y9ddFaGmc9+VlExEt6/9JxNhYLZWqSLljRyPcFQDb1S9dPh09a+BJZAhbEdUd5glctiLhTHFFQ/CaI0G68jMvYIBgCTpM4Dinn+c0kDaqRi2hiVNxh9EH9ddvi/ZFeiPg9J7Pa/d6YhXG3uRXrNnb467IYALo0acvJYaDi4mePi9reiQEf3eVHzDrgnGNe8kOnxK0lSs5Zoeq8qaKOPUAN4Ih/kyI4/GViAHxLE+SnwnkRF+RcWFDodBgMU4F0dXKb3FfwZW6KH+ATq94xso5PhwbcoSxthy7pM5yrJC0EQIDAQABAoIBAAMy70pImau9xLqPCHZgBvzFXJ3/wr5k7xmZSWyZsd9WdTnfY42Gg6XPIxhTs6HZhKdmMKBXQEisJaAs12BgHgnGbYKRvlVsKyzpeviLlaZFI50UbOkx98BhU74TvuJp7GS+5D7gb+HUyg2P799ZafV4WezMUJP/qUmmVG4Y9I/mnY5fvnuBwCwtbD5iyFoy/WS6n+c0RP314Sm0NmpPGTamidvqlUcw6CkcmySse/dcopmgJE0az0DqORlv62+BA7c3vg/pnmUiF5Gl8I7YWjYzmt+druO1rjMBxB0pdRzHgOSTAPkAY6vhpU8y3aL0JpcH8mmJer9PmrFHNjLeZQ0CgYEA/qqCMob6zULyBQnSyQ0VVg8QicKzS8DXvJSlDYOzJnQxUAyGi0ENYlUYhC+cDkSJ6Ec5BO5x8wFj9E6v/Yq6qQgeEsWZCAlb9cckjMM0ZTUvuHQtspPD0m2SVxdxS58yVf700AEr5DvPye+64GkPvggShypPVjuw+RkyWATRo2sCgYEAzxcN5BsDTB9+Nhlmu5LEtYd4RLHlJ/NTpqivHrGCO6V+3AFrMoeSMPCkX0mJSD9lkEQ1xiU6fAu3n+sQk12zXhYeujLT9ePE/dEWhwL/PYqZwQOfrF8wywEZ8uX7WR8dH2TbbZ9eWKpdEfn0Ii4nb5gCVx25BGijxa1tHGVaoXMCgYEA8agBRksZwR+Oo0NQFuJoZbKD4gW0t+S1k0iGWw2nOY02ohxQq+G9/pp7WiwHbO6S4qx7KffOf2bJX7IvhGtZdz6xsuR4s8yVy+L+BujRVlyi/OiZ2IQpZQv+utAO/VCCpmH6E0uZR8mOArSO45Yujwf/9O0sPcsEw0uqnyVrfSMCgYEAo4ZK28JQ2j1MBiAMtTTxy34LhAMNNny3ozQ0BAKbGcpW4BbmtOHEmIyM3wlMNBaLdl3GMI6ZHfaKquaNEjC9QCArZ1BXeyS+GsaOCVJehhP50SWxYgVQnBxkhx7/WKJu9qlHc8qST2VHVLiRBKR5U28u+edof4i5OZD2RaPq6u0CgYANWx6a1wNJTAE363fZSdlRdUMSIfxXOiq5tVAm0rki/5KSztGbxv7xJ+VvOLddWJA87uh8QE8mPltCFnZMNK+32XkcroI8uNOmSrR4BOX7SErYx9nPtiGCK1IaNwOKgIoeEslNWaHmt01da/ObFKnJYSAbnLBLcYsWjUfvkntNzw=="
              ],
              "keyUse": ["ENC"],
              "certificate": [
                "MIICnzCCAYcCBgGO5PcOFjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhkZW1vLWFwcDAeFw0yNDA0MTYwMzMxMjBaFw0zNDA0MTYwMzMzMDBaMBMxETAPBgNVBAMMCGRlbW8tYXBwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzgLOaiEGtdFUL5Fnk3N4sjB67xK316uEiUdymORdKu5y9ddFaGmc9+VlExEt6/9JxNhYLZWqSLljRyPcFQDb1S9dPh09a+BJZAhbEdUd5glctiLhTHFFQ/CaI0G68jMvYIBgCTpM4Dinn+c0kDaqRi2hiVNxh9EH9ddvi/ZFeiPg9J7Pa/d6YhXG3uRXrNnb467IYALo0acvJYaDi4mePi9reiQEf3eVHzDrgnGNe8kOnxK0lSs5Zoeq8qaKOPUAN4Ih/kyI4/GViAHxLE+SnwnkRF+RcWFDodBgMU4F0dXKb3FfwZW6KH+ATq94xso5PhwbcoSxthy7pM5yrJC0EQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCeyc2++Fm9vQN/poPiY8j8ijvvrXwE+930B22KqS+B2eLyGznIu7WFK/2+VB2GYqqZND5g9aa4zviIYjA7YzqjXbrlfDBddbAGoF/6IC2z4yMR67yz0d6J9ECb9B/+h5fMIYNqfHLRlMCrsmQcMk2Kfeh+GLYZML797A5//TQz2N/yXpVdsB8HrzncbzB8z8HN5LDu+thZBxpIm+VbpM/xKVus7i2ulwOnJnY4sWdWyqg21XY+7ew0rTZvvIU8fjCGizv9P6Z7cL3MfRTVJet1DzQjAKNdAlZNRzl7OVN78Qk6p/pJwaEXFSveU/FuuCQwKWUKpbblHcwimx5w1l/T"
              ],
              "priority": ["100"],
              "algorithm": ["RSA-OAEP"]
            }
          },
          {
            "id": "68602cc7-c7ef-43e1-91db-e4dc072fe11e",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "privateKey": [
                "MIIEowIBAAKCAQEAyyWxnMyE/6ltDOoBdSDVfFuebtVl3/tNSmiwtAYfKrPjMXbsstdVbYsYNn4mmsf0q7V+h5OZpr5Mh2S4RvHnSJ4EhILDU67+KwL9Um3ZKfQobdO8MyFd81ZHbsRTcE5/mCPcTyrJrcbLxm4AnkPYhWQXEpNTcJOTXI7zVmAzvG3w2IMeDEKCCT3QzuMQXydwicqmIJQogWIFR/Q+LlONA1CTuEXqzloh5iP30A9cOugcmY4hpUXQHGIhQdHigPuwFIvAf3Blt93wivJC79DZl/W84mWiBuvsiJ7isDRtwYZgdoN3ewy7rjlB+3/fg7l58//j2+jbMKGhybXTMbsFTQIDAQABAoIBAAreH1xWDJ9ovu677gwID6Oxew5O2D5dQUtDwoA++5fbO8I/rHX80xMjJ85yfTo2jD5LXVN/b+7dq1Zq6vjQpCDcYz17iVuGtw4yAL9SJRX7e9Y0R5Msq8wCx5uDYTtW17iZ4oVRsqxbQDeDVwEgfArWye0yeHpDStTeyOHMD7h6yMrEh+Nb8DVhmfGuPjtEHLQhk8TgeojcHGJB/pIWT+vzMiJPsy+BJrw0N19af3Sc3AsOsUuTEjMsOT1DDfScuVWDg2GNglh693qnt82IZZTb4Qbb9ncwjAMuT0AcDb+I32tSqlmLGXkPH58J8o0LpZqUuUFwlqNNHQz6CEvZqYECgYEA5xEg5IOjnuXCLAPNbmU7b0pTZyfiF5va8eN86ksMW/k5f+QLWnK6UktLBlbdrjpwl/aifLCeLdAbAUV4pwWsivRLyGQC6DEGg3PTamuMSeqnWQJeNkekuicR1scz4uClQoNLMAuwCDEYSiG+kEpLB+X4/N5Rd0jthGoQNcucHFECgYEA4RFTuCeFEhDN6TC2IcsE+qiXPCnkMvicc7+16pchE2AF/DUP9VORVgEmFLMIla3JsCk4JCILieRqb3dvV0CzCYIIHkpi1lEmlIwnSEnWzqwtZP1PUdCVF4fJ6WpLUq9T+ig5eKI4/ooVFvG8hS9XLbGQCpx9PocxPclxiIZAZj0CgYEAkmKwkvSuwOjQJbBXAjxR9gSBaBXFT62mfJ3hMlFPSClQ+yvO4YNTdPVMV3zKvik50ZwnfpUp8N4pbZnEgRPAJtvz8sUhblY4ySik5IO0AdQOJv6wDvU+b8x2qbnTrkUhjUy+YnbVE6t+tuA/6QuYEy3nmtOBiu+BweSr1lji0rECgYA0+6M9wu/spNAUiUcXBXgSmgWgQCxcY3JRPVxR8Wnz6bL/AG7VTer02ChizxLCSbslIU76EpmsyHzV6MPpQm3jWx0WJGTIFyqB5cyJk/hhht7Y21kE5ZlzhJ/ftwosWOHoDfgZkfbg1RjJ4faDU/Wt6BMErHo/cgwBg56aiSA38QKBgFRCYfkapGKIc7Ku4B6XrhBtRH+vXAXVXi0OAjhF+xhoakTZjG1NXpea6P0sRRY3kJlnTqkZptbNh6aknCBAsI5oIt5vgoek9EUb11lrIVYMW9xDlUgdzsrAyhm0Ehg98NRaz9VhPbfiODeGpTm4wHY6VtkuHrVf4nuIiS1VdMt/"
              ],
              "keyUse": ["SIG"],
              "certificate": [
                "MIICnzCCAYcCBgGO5PcNvjANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhkZW1vLWFwcDAeFw0yNDA0MTYwMzMxMTlaFw0zNDA0MTYwMzMyNTlaMBMxETAPBgNVBAMMCGRlbW8tYXBwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyyWxnMyE/6ltDOoBdSDVfFuebtVl3/tNSmiwtAYfKrPjMXbsstdVbYsYNn4mmsf0q7V+h5OZpr5Mh2S4RvHnSJ4EhILDU67+KwL9Um3ZKfQobdO8MyFd81ZHbsRTcE5/mCPcTyrJrcbLxm4AnkPYhWQXEpNTcJOTXI7zVmAzvG3w2IMeDEKCCT3QzuMQXydwicqmIJQogWIFR/Q+LlONA1CTuEXqzloh5iP30A9cOugcmY4hpUXQHGIhQdHigPuwFIvAf3Blt93wivJC79DZl/W84mWiBuvsiJ7isDRtwYZgdoN3ewy7rjlB+3/fg7l58//j2+jbMKGhybXTMbsFTQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQC4X4xuqUZpJMehhuzdIb5c+uGkJib1+dxXjUGTgxRFEy64EPYHgXtdax3+pdOUplRZeent6LttRxjq10JsONbF5X2cwVhAMh/Hp5qHV4ZguJAr7zO4CTdOP1E9jptpLHkCxCPwY3fM/C4QijsGZneB45RGYgcetbvRSWTvEeePVclw25Eg4Za1G5G4NmvV+upAyp2Ci0xAObLZhjwPt1hetYGFrrpKMKO7QKCDRXEPn31c3DESr59PdA21mRftYgsaJKi5gsgFSpaVHR2Pp/s9bW5Qmsfo3AtPNBxWXkaL6bQfajetI5Sj2bxFhMW/fh01RkXlhFnVFv3dAHqb4CkH"
              ],
              "priority": ["100"]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "2d68df35-78aa-475e-82d7-c73996695796",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "15c7d15c-ce1a-463f-8d7c-d2bb53c6dad3",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ebb06ff2-25a7-4050-8514-86a8c7cf6188",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e9b38af8-222b-435b-b74f-e4e03b247deb",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "58a8c07a-3560-4c54-8497-a3d2aee6fe57",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d925ccfe-d1c9-44d3-ba64-f35ea0136813",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "74226878-4580-4441-8148-3273b091b7d3",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "91bdceb6-47fe-47e2-9b4e-a339d8baddef",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "02697a46-8078-4f92-8575-758c776760a2",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d9725e6b-f9ef-4d5a-861b-756921151f25",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0c62a7c1-f2c0-44ff-9049-c815bb23190d",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "869effc3-1d7e-4b9c-8a26-6d822184f1f8",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "23f2dcff-360b-4542-9052-76b2d7d2eedc",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f597d093-0040-46e6-8c59-f4b281aa0941",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "4534ec48-7e1b-41e3-8215-09b631bbd69f",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "3b302489-a968-4d14-8356-b42aa719558e",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-terms-and-conditions",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 70,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0158f28c-7f39-41a6-bd19-4cfbb7ea7549",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "51714081-5716-437a-9eab-78879b57051b",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "c5713fbd-f4ba-4000-8db1-0a63cfb45a6c",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "072db585-96f6-4fb8-b2ee-97740bcdbda2",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "VERIFY_PROFILE",
          "name": "Verify Profile",
          "providerId": "VERIFY_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 90,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "3600",
        "actionTokenGeneratedByUserLifespan.verify-email": "",
        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
        "clientOfflineSessionIdleTimeout": "0",
        "actionTokenGeneratedByUserLifespan.execute-actions": "",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "3600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "36000",
        "shortVerificationUri": "",
        "actionTokenGeneratedByUserLifespan.reset-credentials": ""
      },
      "keycloakVersion": "24.0.2",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: security
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.2
          args:
            - start-dev
            - '--hostname-strict=false'
            - '--import-realm'
            - '--proxy=edge'
            - '--http-relative-path=keycloak'
          env:
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
            - name: KC_PROXY
              value: "edge"
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /keycloak/realms/master
              port: 8080
          volumeMounts:
            - name: keycloak-config-volume
              mountPath: /opt/keycloak/data/import
      volumes:
        - name: keycloak-config-volume
          configMap:
            name: keycloak-config-map
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: security
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---

