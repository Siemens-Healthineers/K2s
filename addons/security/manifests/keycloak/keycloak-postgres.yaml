# SPDX-FileCopyrightText: Â© 2025 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

apiVersion: v1
kind: Namespace
metadata:
  name: security
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-credentials
  namespace: security 
type: Opaque
data:
  username: YWRtaW4=  # base64 of 'admin'
  password: YWRtaW4=  # base64 of 'admin'
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv-volume
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/keycloak/db"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgressql-pvc
  namespace: security 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: postgresql-pv-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      volumes:
        - name: postgres-pv-storage
          persistentVolumeClaim:
            claimName: postgressql-pvc
      containers:
        - name: postgres
          image: docker.io/library/postgres:17.3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            # Use the Secret created above for database credentials
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-db-credentials
                  key: password
            - name: POSTGRES_DB
              value: keycloak # The name of the database Keycloak will use
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: security
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgresql

