# SPDX-FileCopyrightText: Â© 2024 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT
apiVersion: v1
kind: Namespace
metadata:
  name: security
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: security
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.2.4
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: '0.5'
              memory: '512Mi'
          command: ['redis-server']
          args: ['--save', '', '--appendonly', 'no']
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: security
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: oauth2-proxy-config
  namespace: security
data:
  oauth2-proxy.cfg: |
    # Provider config
    provider="oidc"
    provider_display_name="Hydra"
    # Use http for communication
    login_url="http://172.19.1.1:4444/oauth2/auth"
    redeem_url="http://172.19.1.1:4444/oauth2/token"
    validate_url="http://172.19.1.1:4444/oauth2/userinfo"
    profile_url="http://172.19.1.1:4444/oauth2/userinfo" 
    ssl_insecure_skip_verify=true
    # Client config
    client_id="k2s-winuser-support-client-id"
    client_secret="b7BeasywdjztKeTCytdtNAiPk"
    cookie_secret="ZzBkN000Wm0pQkVkKUhzMk5YPntQRUw_ME1oMTZZTy0="
    cookie_secure="true"
    # Add redirect URL configuration
    redirect_url="http://k2s.cluster.local/oauth2/callback"
    # Upstream config
    http_address="0.0.0.0:4180"
    upstreams="file:///dev/null"
    email_domains=["*"]
    oidc_issuer_url="http://172.19.1.1:4444"
    scope="openid"
    # token
    pass_access_token=true
    # Redis session store config
    session_store_type="redis"
    redis_connection_url="redis://redis-service:6379"
    pass_authorization_header=true
    set_authorization_header=true
    # The next property is needed to authenticate the bearer token 
    # see http://medium.com/in-the-weeds/service-to-service-authentication-on-kubernetes-94dcb8216cdc
    skip_jwt_bearer_tokens=true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: security
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      volumes:
        - name: oauth2-proxy-config
          configMap:
            name: oauth2-proxy-config
      containers:
        - name: oauth-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
          ports:
            - containerPort: 4180
          volumeMounts:
            - name: oauth2-proxy-config
              mountPath: /etc/oauth2-proxy.cfg
              subPath: oauth2-proxy.cfg
          args:
            - --config=/etc/oauth2-proxy.cfg
            - --provider=oidc
            - --set-xauthrequest
            - --pass-access-token
            - --show-debug-on-error
            - --standard-logging
            - --auth-logging
            - --request-logging
            - --ssl-upstream-insecure-skip-verify
            - --ssl-insecure-skip-verify
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: security
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    k8s-app: oauth2-proxy
---

