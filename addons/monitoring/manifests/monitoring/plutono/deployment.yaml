# SPDX-FileCopyrightText: Â© 2024 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

---
# Source: kube-prometheus-stack/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-prometheus-stack-plutono
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-6.57.4
    app.kubernetes.io/name: kube-prometheus-stack-plutono
    app.kubernetes.io/instance: kube-prometheus-stack
    app.kubernetes.io/version: "9.5.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-prometheus-stack-plutono
      app.kubernetes.io/instance: kube-prometheus-stack
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-prometheus-stack-plutono
        app.kubernetes.io/instance: kube-prometheus-stack
      annotations:
        checksum/config: 99349dd1cb9b581acd136c4b7407f231ae60621eeefb90f451bf9cefc51b72dc
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 987606a43526e0684f3f866bb4fae2e717f414d9f370685c1c55f3b9a2f4de28
        checksum/secret: e997d22b85976e96f5cb019ff60bdd449e0a49b48fb1bc0ebd3d6786fce17e68
        kubectl.kubernetes.io/default-container: grafana
    spec:
      serviceAccountName: kube-prometheus-stack-plutono
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      enableServiceLinks: true
      initContainers:
        - name: plutono-sc-datasources
          image: "quay.io/kiwigrid/k8s-sidecar:1.24.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: LIST
            - name: LABEL
              value: "grafana_datasource"
            - name: LABEL_VALUE
              value: "1"
            - name: FOLDER
              value: "/etc/plutono/provisioning/datasources"
            - name: RESOURCE
              value: "both"
          resources:
            {}
          volumeMounts:
            - name: sc-datasources-volume
              mountPath: "/etc/plutono/provisioning/datasources"
      containers:
        - name: plutono-sc-dashboard
          image: "quay.io/kiwigrid/k8s-sidecar:1.24.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: METHOD
              value: 
            - name: LABEL
              value: "grafana_dashboard"
            - name: LABEL_VALUE
              value: "1"
            - name: FOLDER
              value: "/tmp/dashboards"
            - name: RESOURCE
              value: "both"
            - name: NAMESPACE
              value: "ALL"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          resources:
            {}
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: plutono
          image: "ghcr.io/credativ/plutono:v7.5.29"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/plutono/plutono.ini"
              subPath: plutono.ini
            - name: storage
              mountPath: "/var/lib/plutono"
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
            - name: sc-dashboard-provider
              mountPath: "/etc/plutono/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
            - name: sc-datasources-volume
              mountPath: "/etc/plutono/provisioning/datasources"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PL_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: kube-prometheus-stack-plutono
                  key: admin-user
            - name: PL_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kube-prometheus-stack-plutono
                  key: admin-password
            - name: PL_PATHS_DATA
              value: /var/lib/plutono/
            - name: PL_PATHS_LOGS
              value: /var/log/plutono
            - name: PL_PATHS_PLUGINS
              value: /var/lib/plutono/plugins
            - name: PL_PATHS_PROVISIONING
              value: /etc/plutono/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: kube-prometheus-stack-plutono
        - name: storage
          emptyDir: {}
        - name: sc-dashboard-volume
          emptyDir:
            {}
        - name: sc-dashboard-provider
          configMap:
            name: kube-prometheus-stack-plutono-config-dashboards
        - name: sc-datasources-volume
          emptyDir:
            {}
      nodeSelector:
        "kubernetes.io/os": linux
