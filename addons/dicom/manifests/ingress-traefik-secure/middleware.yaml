# SPDX-FileCopyrightText: Â© 2025 Siemens Healthineers AG
#
# SPDX-License-Identifier: MIT

# https://doc.traefik.io/traefik/middlewares/http/forwardauth/
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: oauth2-proxy-auth
  namespace: dicom
spec:
  forwardAuth:
    address: "https://k2s.cluster.local/oauth2/auth"
    trustForwardHeader: true
    authResponseHeaders: 
      - X-Auth-Request-User
      - X-Auth-Request-Email
      - Authorization
      - Set-Cookie
    tls:
      insecureSkipVerify: true
---
# The next two ingress resources are for solving the redirect route issue in traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dicom-traefik-cluster-local-correct1
  namespace: dicom
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: dicom-cors-header@kubernetescrd,security-oauth2-proxy-forwarder-signin@kubernetescrd,dicom-oauth2-proxy-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: 'true'
spec:
  ingressClassName: traefik
  rules:
    - host: k2s.cluster.local
      http:
        paths:
          - path: /ui/app
            pathType: Prefix
            backend:
              service:
                name: dicom
                port:
                  number: 8042
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dicom-traefik-cluster-local-correct2
  namespace: dicom
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: dicom-cors-header@kubernetescrd,security-oauth2-proxy-forwarder-signin@kubernetescrd,dicom-oauth2-proxy-auth@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: 'true'
spec:
  ingressClassName: traefik
  rules:
    - host: k2s.cluster.local
      http:
        paths:
          - path: /ui/api
            pathType: Prefix
            backend:
              service:
                name: dicom
                port:
                  number: 8042


